openapi: 3.0.0
info:
  title:  API Docs
  version: 1.0.0c
  description: Api docs for appointment booking app
paths:
  /auth/register:
    post:
      summary: endpoint to sign up
      tags:
        - onboarding
        - authentication
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        200:
          description: successful signup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/verification:
    post:
      summary: verify email
      tags:
        - onboarding
        - authentication
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyEmail"
      responses:
        200:
          description: email verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      summary: endpoint for login
      tags:
        - authentication
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: email verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        404:
          description: not found error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/me:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    get:
      tags:
        - user
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: not found error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /user/logout:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    get:
      tags:
        - user
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"

  /merchant/schedules:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    post:
      summary: endpoint for adding/creating merchant schedules
      tags:
        - merchant
      operationId: createSchedules
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                   $ref: "#/components/schemas/CreateScheduleRequest"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DefaultResponse"
    get:
      summary: get all schedules
      tags:
        - merchant
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Schedule"













components:
  parameters:
    DeviceID:
      name: x-device-id
      in: header
      schema:
        type: string
      required: true
    AuthToken:
      name: x-auth-token
      in: header
      schema:
        type: string
      required: true

  schemas:
    #default values
    DefaultResponse:
      title: DefaultResponse
      type: object
      properties:
        message:
          type: string
      required:
        - message

    ErrorResponse:
      title: DefaultResponse
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - message

    ##====REQUESTS======##

    SignupRequest:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum:
            - user
            - merchant
      required:
        - fullName
        - email
        - role



    VerifyEmail:
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
      required:
        - email
        - otp

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    CreateScheduleRequest:
      type: object
      properties:
        date:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string



    ###====RESPONSES=====###
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string

    Schedule:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        merchant:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - booked
            - available



    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        user:
          $ref: '#/components/schemas/User'

