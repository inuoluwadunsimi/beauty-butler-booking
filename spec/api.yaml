openapi: 3.0.0
info:
  title:  API Docs
  version: 1.0.0
  description: Api docs for appointment booking app
paths:
  /auth/register:
    post:
      summary: endpoint to sign up
      tags:
        - onboarding
        - authentication
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        200:
          description: successful signup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/verification:
    post:
      summary: verify email
      tags:
        - onboarding
        - authentication
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyEmail"
      responses:
        200:
          description: email verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      summary: endpoint for login
      tags:
        - authentication
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: email verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        404:
          description: not found error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/me:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    get:
      tags:
        - user
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: not found error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /user/logout:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    post:
      tags:
        - user
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"

  /user/merchants:
    get:
      summary: get all merchants
      tags:
        - merchants
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /user/schedules/{merchantId}:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
      - $ref: "#/components/parameters/MerchantParam"
    get:
      summary: get merchants schedules
      tags:
        - merchants
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Schedule"

  /user/appointments/{scheduleId}:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    post:
      parameters:
        - $ref: "#/components/parameters/ScheduleParam"
      summary: endpoint to book an appointment
      tags:
        - appointment
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: view all appointments made by a user
      tags:
        - appointment
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppointmentResponse"




  /merchant/schedules:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    post:
      summary: endpoint for adding/creating merchant schedules
      tags:
        - merchant
      operationId: createSchedules
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                   $ref: "#/components/schemas/CreateScheduleRequest"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DefaultResponse"
    get:
      summary: get all schedules
      tags:
        - merchant
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Schedule"

  /merchant/appointments:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    get:
      summary: endpoint to get all appointments
      tags:
        - appointment
      responses:
        200:
          description: appointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"

  /merchant/appointments/{appointmentId}:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    put:
      parameters:
         - $ref: "#/components/parameters/AppointmentParam"
      summary: endpoint to change the status of an appointment
      tags:
        - appointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAppointment"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: endpoint to get one appointment
      tags:
        - appointment
      responses:
        200:
          description: appointment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"



















components:
  parameters:
    DeviceID:
      name: x-device-id
      in: header
      schema:
        type: string
      required: true

    AuthToken:
      name: x-auth-token
      in: header
      schema:
        type: string
      required: true

    AppointmentParam:
      name: appointmentId
      in: path
      schema:
        type: string
      required: true

    ScheduleParam:
      name: scheduleId
      in: path
      schema:
        type: string
      required: true

    MerchantParam:
      name: merchantId
      in: path
      schema:
        type: string
      required: true

  schemas:
    #default values
    DefaultResponse:
      title: DefaultResponse
      type: object
      properties:
        message:
          type: string
      required:
        - message

    ErrorResponse:
      title: DefaultResponse
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - message

    ##====REQUESTS======##

    SignupRequest:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum:
            - user
            - merchant
      required:
        - fullName
        - email
        - role

    UpdateAppointment:
      type: object
      properties:
        status:
          type: string
          enum:
            - cancelled
            - pending
            - completed



    VerifyEmail:
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
      required:
        - email
        - otp

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    CreateScheduleRequest:
      type: object
      properties:
        date:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string



    ###====RESPONSES=====###
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string

    Schedule:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        merchant:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - booked
            - available

    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer:
          type: string
          format: uuid
        merchant:
          type: string
          format: uuid
        schedule:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - completed
            - cancelled

    AppointmentResponse:
      type: object
      properties:
        id:
          type: string
        merchant:
          $ref: "#/components/schemas/User"
        customer:
          $ref: "#/components/schemas/User"
        schedule:
          $ref: "#/components/schemas/Schedule"
        status:
          type: string
          enum:
            - pending
            - completed
            - cancelled







    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        user:
          $ref: '#/components/schemas/User'

